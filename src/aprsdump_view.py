"""
aprsdump_view.py

View files generated by aprsdump.y
"""

import argparse
import aprs
import framecap
import time
import aprs_data
import binascii

def try_convert(bin):
    result = ""
    for c in bin:
        try:
            result += chr(c)
        except:
            result += "."
    return result

def show_frame(ts, raw_frame):

    ax25 = aprs.functions.parse_frame_ax25(raw_frame)
    print("ts:", ts, "src:",ax25.source, "dst:",ax25.destination, "path:",ax25.path, "info", ax25.info)
    x = aprs_data.process_raw_frame(raw_frame)
    if x is None:
        print(f"   Unable to parse")
    else:
        print(f"   {x['from']}->{x['to']} VIA {x['path']} type:{x['format']}")
    #print(raw_frame, x)
    #print(x)


if __name__ == "__main__":

    parser = argparse.ArgumentParser("APRSDump Analysis - Read APRS data")
    parser.add_argument("filepath", type=str, default="127.0.0.1", help="ip of kiss modem")

    # open the file
    args = parser.parse_args()

    f = open(args.filepath, "r")
    freader = framecap.FrameReader(f)

    freader_line = freader.read_next()
    while freader_line is not None:
        ts, raw_frame = freader_line
        #print(raw_frame)
        show_frame(ts, raw_frame)

        freader_line = freader.read_next()

    
